generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  name             String
  phone            String?
  email            String            @unique
  photo            String?
  password         String
  role             UserRoles
  bio              String?
  github           String?
  instagram        String?
  skills           String?
  domicile         String?
  recruiterProfile RecruiterProfile?
  experiences      UserExperience[]
  portfolios       UserPortfolio[]
  workerProfile    WorkerProfile?
}

model RecruiterProfile {
  companyName     String?
  companyEmail    String?
  companyPhone    String?
  companySegment  String?
  companyInfo     String?
  userId          Int     @id
  companyDomicile String?
  user            User    @relation(fields: [userId], references: [id])
}

model WorkerProfile {
  provinceId Int?
  workPlace  String?
  currentJob String?
  userId     Int     @id
  user       User    @relation(fields: [userId], references: [id])
}

model Experience {
  id          Int              @id @default(autoincrement())
  position    String
  companyName String
  description String
  startAt     DateTime
  endedAt     DateTime
  createdAt   DateTime         @default(now())
  users       UserExperience[]
}

model Portfolio {
  id        Int             @id @default(autoincrement())
  link      String
  types     String
  photo     String
  createdAt DateTime        @default(now())
  title     String
  users     UserPortfolio[]
}

model UserExperience {
  userId       Int
  experienceId Int
  experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user         User       @relation(fields: [userId], references: [id])

  @@id([userId, experienceId])
}

model UserPortfolio {
  userId      Int
  portfolioId Int
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        User      @relation(fields: [userId], references: [id])

  @@id([userId, portfolioId])
}

enum UserRoles {
  ADMIN
  RECRUITER
  WORKER
}
